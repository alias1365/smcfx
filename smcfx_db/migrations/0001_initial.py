# Generated by Django 5.0.6 on 2025-08-16 13:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='test_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folder', models.CharField(max_length=300)),
                ('token', models.CharField(max_length=300)),
                ('p_stat', models.CharField(default='', max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='expert_key',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('key', models.CharField(max_length=100, unique=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deactive_text', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expert_key_to_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='expert_setting_journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('M1', models.BooleanField(default=True, verbose_name='1 Minute')),
                ('M5', models.BooleanField(default=False, verbose_name='5 Minutes')),
                ('M15', models.BooleanField(default=True, verbose_name='15 Minutes')),
                ('M30', models.BooleanField(default=False, verbose_name='30 Minutes')),
                ('H1', models.BooleanField(default=False, verbose_name='1 Hour')),
                ('H4', models.BooleanField(default=False, verbose_name='4 Hours')),
                ('D1', models.BooleanField(default=False, verbose_name='1 Day')),
                ('W1', models.BooleanField(default=False, verbose_name='1 Week')),
                ('capture_zoom', models.SmallIntegerField(default=1)),
                ('journal_server', models.CharField(blank=True, default='', max_length=300)),
                ('user_token', models.CharField(blank=True, default='', max_length=300)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_journal_setting_ref', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='expert_setting_monman',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tp1_exit_vol', models.FloatField(default=0.3)),
                ('tp2_exit_vol', models.FloatField(default=0.3)),
                ('tp3_exit_vol', models.FloatField(default=0.3)),
                ('tp_trail_step', models.FloatField(default=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_monman_setting_ref', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='expert_setting_risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_type', models.SmallIntegerField(default=1)),
                ('risk_percent', models.FloatField(default=1)),
                ('risk_dollar', models.FloatField(default=5)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_risk_setting_ref', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='expert_setting_session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_day_count', models.SmallIntegerField(default=3)),
                ('AsiaStart', models.CharField(default='2:30', max_length=50)),
                ('AsiaEnd', models.CharField(default='9:30', max_length=50)),
                ('LondonStart', models.CharField(default='11:30', max_length=50)),
                ('LondonEnd', models.CharField(default='17:00', max_length=50)),
                ('NyStart', models.CharField(default='17:00', max_length=50)),
                ('NyEnd', models.CharField(default='00:30', max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_session_setting_ref', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='expert_setting_style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_color', models.CharField(default='clrYellow', max_length=50)),
                ('London_color', models.CharField(default='clrLime', max_length=50)),
                ('NY_color', models.CharField(default='clrDeepPink', max_length=50)),
                ('Asia_color', models.CharField(default='clrYellow', max_length=50)),
                ('PB_color', models.CharField(default='clrAliceBlue', max_length=50)),
                ('SessionLines', models.SmallIntegerField(default=2)),
                ('SessionHalfLine', models.SmallIntegerField(default=2)),
                ('Position_1_color', models.CharField(default='clrAliceBlue', max_length=50)),
                ('Position_2_color', models.CharField(default='clrYellow', max_length=50)),
                ('Position_3_color', models.CharField(default='clrLime', max_length=50)),
                ('Position_4_color', models.CharField(default='clrPink', max_length=50)),
                ('Position_5_color', models.CharField(default='clrOrange', max_length=50)),
                ('Position_n_color', models.CharField(default='clrRed', max_length=50)),
                ('text_margin', models.SmallIntegerField(default=20)),
                ('text_font_size', models.SmallIntegerField(default=8)),
                ('caption_font_size', models.SmallIntegerField(default=7)),
                ('text_base_width', models.SmallIntegerField(default=28)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_style_style_ref', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='file_receive_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_date', models.DateTimeField(auto_now_add=True)),
                ('log', models.TextField()),
                ('log_tag', models.CharField(max_length=20)),
                ('type', models.CharField(default='', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_receive_log_to_user_ref', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=25)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=100, null=True)),
                ('timezone', models.CharField(blank=True, max_length=100, null=True)),
                ('init_pass', models.CharField(max_length=30)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_user_ref', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='test_data_file',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.TextField()),
                ('file_content', models.TextField()),
                ('mid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tst_ref', to='smcfx_db.test_data')),
            ],
        ),
        migrations.CreateModel(
            name='trade_account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.BigIntegerField()),
                ('name', models.CharField(max_length=500)),
                ('company', models.CharField(max_length=500)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=18)),
                ('equity', models.DecimalField(decimal_places=2, max_digits=18)),
                ('currency', models.CharField(max_length=200)),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_account_to_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'number', 'company')},
            },
        ),
        migrations.CreateModel(
            name='trade_position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_id', models.BigIntegerField()),
                ('symbol', models.CharField(max_length=200)),
                ('type', models.CharField(default='', max_length=30)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=18)),
                ('open_price', models.FloatField(default=0)),
                ('current_price', models.FloatField(default=0)),
                ('sl', models.FloatField(default=0)),
                ('tp', models.FloatField(default=0)),
                ('profit', models.DecimalField(decimal_places=2, max_digits=18)),
                ('commission', models.FloatField(default=0)),
                ('open_time', models.DateTimeField(null=True)),
                ('close_time', models.DateTimeField(null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('swap', models.FloatField(default=0)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_position_to_trade_account', to='smcfx_db.trade_account')),
            ],
            options={
                'unique_together': {('account', 'position_id')},
            },
        ),
        migrations.CreateModel(
            name='trade_deals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket', models.BigIntegerField(default=0)),
                ('type', models.CharField(default='', max_length=200)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=18)),
                ('open_price', models.FloatField(default=0)),
                ('close_price', models.FloatField(default=0)),
                ('profit', models.DecimalField(decimal_places=2, max_digits=18)),
                ('commission', models.DecimalField(decimal_places=2, max_digits=18)),
                ('swap', models.DecimalField(decimal_places=2, max_digits=18)),
                ('open_time', models.DateTimeField(null=True)),
                ('close_time', models.DateTimeField(null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_deals_to_trade_position', to='smcfx_db.trade_position')),
            ],
        ),
        migrations.CreateModel(
            name='trade_rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate_plan', models.DecimalField(blank=True, decimal_places=1, default=None, max_digits=5, null=True)),
                ('rate_checklist', models.DecimalField(blank=True, decimal_places=1, default=None, max_digits=5, null=True)),
                ('rate_sentiment', models.DecimalField(blank=True, decimal_places=1, default=None, max_digits=5, null=True)),
                ('text_plan', models.TextField(blank=True, default='', null=True)),
                ('text_checklist', models.TextField(blank=True, default='', null=True)),
                ('text_sentiment', models.TextField(blank=True, default='', null=True)),
                ('position', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trade_rating_to_trade_position', to='smcfx_db.trade_position')),
            ],
        ),
        migrations.CreateModel(
            name='trade_sentiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('before_text', models.TextField(blank=True, default='', null=True)),
                ('trading_text', models.TextField(blank=True, default='', null=True)),
                ('after_text', models.TextField(blank=True, default='', null=True)),
                ('position', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trade_sentiment_to_trade_position', to='smcfx_db.trade_position')),
            ],
        ),
        migrations.CreateModel(
            name='trader_select_account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trader_select_account_to_trader_account', to='smcfx_db.trade_account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trader_select_account_to_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='trade_files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=150)),
                ('file_content', models.TextField()),
                ('file_type', models.CharField(blank=True, default='', max_length=10)),
                ('file_tm', models.CharField(blank=True, default='', max_length=10)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_files_to_trade_position', to='smcfx_db.trade_position')),
            ],
            options={
                'unique_together': {('position', 'file_name')},
            },
        ),
    ]
